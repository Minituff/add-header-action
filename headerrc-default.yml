# This file containers the default values for this action.
# Any items added to the .headerrc file will be *merged* with this one.
# Duplicate values will be overwritten from the .headerrc.

name: This file is used to set configuration for the add-header action

# Decide the method for choosing which files to add headers to
# opt-out  =  all files will be selected unless the file path matches untracked_files
# opt-in   =  no  files will be selected unless the file path matches anything in tracked_files
file_mode: opt-out


tracked_files:
  - a-list-of-files-to-be-tracked.fake-extension

# Remove items from the default values by using a !. Like "!^.git/"
untracked_files:
  - ^\.git/ # Very important to ignore
  - ^\.gitignore
  - __init__.py$ # These are just empty files
  - \.json$ # Most json files cannot contain comments


# Automatically add everything in the .gitignore file into the untracked_files section
# This can save lots of time because most of these files can be ignored.
untrack_gitignore: true

negate_characters: "!"

# With this enabled, the following settings are not loaded, and must be provided from the .headerrc file.
# tracked_files, untracked_files, file_associations_by_comment, file_associations_by_extension, skip_lines_that_have
use_default_file_settings: true

# The header to be inserted in matching files
header: |
  SUPER SECRET CONFIDENTIAL

  [2023] - [Infinity and Beyond] ACME Inc
  All Rights Reserved.
  
  NOTICE: This is super secret info that
  must be protected at all costs.


# Group multiple items by the comment value
file_associations_by_comment:  #Format = Comment: List[Regex for file match]
  "#": # Shell-like single-line comment
    - "^.gitignore$"
    - "\\.*\\.ya?ml$"
    - "\\.sh$"
    - "\\.bash$"
    - "\\.zsh$"
    - "\\.yaml$"
    - "\\.yml$"
    - "\\.py$"
    - "\\.r$"
    - "\\.rb$"
    - "\\.gemspec$"
    - "\\.podspec$"
    - "\\.sls$"
    - "^Dockerfile$"
    - "\\.tf$" # Terraform
    - "\\.pl$" # Perl
    - "\\.cgi$"
    - "\\.awk$"
    - "\\.sed$"

  "//":  # C-like single-line comment
    - "\\.c$"
    - "\\.json5$"
    - "\\.h$"
    - "\\.cpp$"
    - "\\.hpp$"
    - "\\.cc$"
    - "\\.hh$"
    - "\\.cxx$"
    - "\\.hxx$"
    - "\\.cs$"
    - "\\.java$"
    - "\\.js$"
    - "\\.jsx$"
    - "\\.ts$"
    - "\\.tsx$"
    - "\\.m$"
    - "\\.mm$"
    - "\\.swift$"
    - "\\.go$"  # Go
    - "\\.rs$"  # Rust
    - "\\.dart$"
    - "\\.php$"
    - "\\.css$"
    - "\\.scss$"
    - "\\.sass$"      
    - "\\.kt$" # Kotlin single-line comment
    - "\\.kts$"
    - "\\.ktm$"
    
  "%":  # LaTeX, Matlab comment
    - "\\.tex$"
    - "\\.sty$"
    - "\\.cls$"
    - "\\.m$"
    - "\\.mlx$"

  "REM":  # Batch files
    - "\\.bat$"
    - "\\.cmd$"

  "/*":  # Kotlin multi-line comment
    - "\\.kt$"
    - "\\.kts$"
    - "\\.ktm$"

  "--":  # SQL, Lua, Haskell comment
    - "\\.sql$"
    - "\\.lua$"
    - "\\.hs$"
    - "\\.lhs$"
    - "\\.tpl$"
    - "\\.pks$"
    - "\\.pkb$"
    
  ";":  # Ini, Clojure, Lisp-like comment
    - "\\.ini$"
    - "\\.conf$"
    - "\\.cfg$"
    - "\\.clj$"
    - "\\.cljs$"
    - "\\.lisp$"
    - "\\.asl$"
    - "\\.el$"



# The item extension and the associated comment. Overrides file_associations_by_comment
# Remember the escape charter for yml \
file_associations_by_extension: # Format = Regex for file match: List[prefix, suffix]|str.
  "\\.md$": ["<!--", "-->"]  # Markdown
  "\\.html$": ["<!--", "-->"]  # HTML
  "\\.htm$": ["<!--", "-->"]  # HTML
  "\\.xhtml$": ["<!--", "-->"]  # XHTML
  "\\.xml$": ["<!--", "-->"]  # XML
  "\\.svg$": ["<!--", "-->"]  # Scalable Vector Graphics
  "\\.jsp$": ["<!--", "-->"]  # Java Server Pages
  "\\.vue$": ["<!--", "-->"]  # Vue.js Single-File Components
  "\\.svelte$": ["<!--", "-->"]  # Svelte Single-File Components
  "\\.css$": ["/*", "*/"]  # Cascading Style Sheets
  "\\.scss$": ["/*", "*/"]  # Sassy CSS
  "\\.sass$": ["/*", "*/"]  # Syntactically Awesome Stylesheets
  "\\.js$": ["/*", "*/"]  # JavaScript
  "\\.jsx$": ["/*", "*/"]  # JavaScript XML
  "\\.ts$": ["/*", "*/"]  # TypeScript
  "\\.tsx$": ["/*", "*/"]  # TypeScript XML
  "\\.c$": ["/*", "*/"]  # C
  "\\.cpp$": ["/*", "*/"]  # C++
  "\\.h$": ["/*", "*/"]  # C Header
  "\\.hpp$": ["/*", "*/"]  # C++ Header
  "\\.java$": ["/*", "*/"]  # Java
  "\\.cs$": ["/*", "*/"]  # C#
  "\\.go$": ["/*", "*/"]  # Go
  "\\.kt$": ["/*", "*/"]  # Kotlin
  "\\.swift$": ["/*", "*/"]  # Swift
  "\\.php$": ["/*", "*/"]  # PHP
  "\\.rs$": ["/*", "*/"]  # Rust
  "\\.m$": ["/*", "*/"]  # Objective-C
  "\\.mm$": ["/*", "*/"]  # Objective-C++


# For files that have 'important' first lines, use this setting to move the header below that line
skip_lines_that_have: # Format = Regex for file match: List|str 
  "\\.sh$": ["^#!"]
  "\\.html$": ["<!DOCTYPE"]